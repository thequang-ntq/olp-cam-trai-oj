#include <bits/stdc++.h>

using namespace std;

#ifdef LOCAL_DEBUG
#include "algo/debug.h"
#else
#define debug(...) 42 
#endif

using i64 = long long;

void solve() {
  int n, m;
  cin >> n >> m;
  vector<int> a(n + 1), c(m + 2, 1e9);
  for (int i = 1; i <= n; i++) {
    cin >> a[i];
  }
  for (int i = 1; i <= m; i++) {
    cin >> c[i];
  }
  for (int i = m; i > 0; i--) {
    c[i] = min(c[i + 1], c[i]);
  }
  sort(a.begin() + 1, a.end());
  vector<i64> dp(n + 1, 1e18);
  dp[0] = 0;
  //minimum cost fill to i
  for (int i = 1; i <= n; i++) {
    for (int j = i; j > 0; j--) {
      dp[i] = min(dp[i], dp[j - 1] + c[a[i] - a[j] + 1]);
    }
  }
  cout << dp[n];
}

int main() {
  cin.tie(nullptr) -> sync_with_stdio(false);
  int TC = 1;
  // cin >> TC;
  while(TC--) {
    solve();
  }
}

