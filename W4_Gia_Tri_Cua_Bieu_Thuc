#ifdef LOCAL_DEBUG
#include "debuge.cpp"
#else
#define db(...) 42 
#endif
#include <bits/stdc++.h>
 
using namespace std;
using i64 = long long;

const i64 mod = 1e9 + 7;

int n, res;
bool ok(vector<i64> a, string posfix) {
	map<char, i64> mp;
	int i = 0;
	for(char &x: posfix) {
		if(x >= 'a' && x <= 'z') mp[x] = a[i++];
	}
	stack<i64> s;
	for(char &c: posfix) {
		if(c >= 'a' && c <= 'z') 
			s.push(mp[c]);
		else {
			i64 A1 = s.top(); s.pop();
			i64 A2 = s.top(); s.pop();
			if(c == '-') s.push(A2 - A1);
			else if(c == '+') s.push(A1 + A2);
			else if(c == '*') s.push(A1 * A2);
		}
	}
//	cout << "\nuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu\n";
//	for(auto &[x, y]: mp) cout << x << ' ' << y << '\n';
//	cout << s.top() << '\n';	
//	cout << "\nuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu\n";
	return res == s.top();
}
void solve() {
	cin >> n;
	vector<i64> a(n);
	for(int i = 0; i < n; i++) cin >> a[i];
	cin >> res;
	string s;
	cin >> s;
	stack<char> stk;
	string posfix = "";
	for(char &c: s) {
		if('a' <= c && c <= 'z') posfix += c;
		else if(c == '+' || c == '-' || c == '*' || c == '(') stk.push(c);
		else {
			while(!stk.empty() && stk.top() != '(') {
				posfix += stk.top();
				stk.pop();
			}
			stk.pop();
		}
	}
	sort(a.begin(), a.end());
	do{
		if(ok(a, posfix)) {
			cout << "YES\n";
			return;
		}
	} while(next_permutation(a.begin(), a.end()));
	cout << "NO\n";
}
int main() {
	ios::sync_with_stdio(0);
	cin.tie(0);
	int tc;
	cin >> tc;
	while(tc--) solve();
	return 0;
}
